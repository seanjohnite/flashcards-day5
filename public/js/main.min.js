var app=angular.module("flashCards",["ui.router"]);app.value("currentFlashCards",[]),app.controller("DeleteCardController",function(e,r,t,n){e.deleteCard=function(){r.deleteFlashCard(n.cardId).then(function(){t.go("cards")}).then(null,console.error.bind(console))},e.back=function(){t.go("^")}}),app.controller("EditCardController",function(e,r,t,n){e.categories=r.categories,r.getOneFlashCard(n.cardId).then(function(r){e.card=r}),e.saveCard=function(){r.updateCard(e.card).then(function(e){t.go("cards")}).then(null,console.error.bind(console))}}),app.controller("MainController",function(e,r,t,n){e.categories=r.categories,e.selectedCategory,e.getCategoryCards=function(a){e.loading=!0,r.getFlashCards(a).then(function(r){n.reset(),e.selectedCategory=a,e.flashCards=r})["catch"](function(e){t.error("error getting cards:",e)})["finally"](function(){e.loading=!1})},e.getCategoryCards()}),app.controller("NewCardController",function(e,r,t,n){function a(){r.newCard={question:null,category:"",answers:[{text:null,correct:!1},{text:null,correct:!1},{text:null,correct:!1}]}}r.categories=t.categories,r.saveCard=function(){t.createCard(r.newCard).then(function(r){a(),e.go("cards")})},a()}),app.controller("StatsController",function(e,r){e.scores=r.scores}),app.config(function(e){e.state("stats",{url:"/stats",templateUrl:"/templates/statsPage.html",controller:"StatsController"}).state("newCard",{url:"/newCard",templateUrl:"/templates/newCardForm.html",controller:"NewCardController"}).state("cards",{url:"/",templateUrl:"/templates/allCards.html",controller:"MainController"}).state("manageCard",{url:"/:cardId",templateUrl:"/templates/manageCard.html"}).state("manageCard.edit",{url:"/edit",templateUrl:"/templates/editCard.html",controller:"EditCardController"}).state("manageCard.delete",{url:"/delete",templateUrl:"/templates/deleteCard.html",controller:"DeleteCardController"})}),app.factory("FlashCardsFactory",function(e,r){function t(t){var n={};return t&&(n.params={category:t}),e.get("/cards/",n).then(function(e){return e.data}).then(function(e){return angular.copy(e,r),r})}function n(t){return e.post("/cards",t).then(function(e){return e.data}).then(function(e){return r.push(e),e})}function a(r){return e.put("/cards/"+r._id,r).then(function(e){return e.data})}function o(r){return e.get("/cards/"+r).then(function(e){return e.data})}function c(r){return e["delete"]("/cards/"+r).then(function(e){return e.data})}var l=["MongoDB","Express","Angular","Node"];return{getFlashCards:t,createCard:n,updateCard:a,categories:l,getOneFlashCard:o,deleteFlashCard:c}}),app.factory("ScoreFactory",function(){var e={correct:0,incorrect:0};return{scores:e,increase:function(){++e.correct},decrease:function(){++e.incorrect},reset:function(){e.correct=0,e.incorrect=0}}}),app.directive("borderHover",function(){return{restrict:"AC",link:function(e,r){var t;r.on("mouseenter",function(){t=r.css("border"),r.css("border","solid 5px black")}),r.on("mouseleave",function(){r.css("border",t)})}}}),app.directive("flashCard",function(e){return{restrict:"E",templateUrl:"/templates/flashcard.html",scope:{card:"="},link:function(r,t,n){r.answerQuestion=function(t){r.card.answered||(r.card.answered=!0,r.card.answeredCorrectly=t.correct,t.correct?e.increase():e.decrease(),r.editing=!1)}}}}),app.directive("loader",function(){return{restrict:"E",templateUrl:"templates/loader.html"}});